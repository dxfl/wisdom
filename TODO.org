
* DONE add program that controls all
  CLOSED: [2016-09-22 Thu 13:05]
maybe is the real wisdom.rb and the actual wisdom is more a pdf_interface class
the program should [/]:
  - [X] get all the pdf folders
  - [X] folder.each get pdf_list
  - [X] pdf_list.each process pdf, get title, authors, abstract, filename
  - [X] save extracted pdf to mongo

* DONE clean up code
  CLOSED: [2016-10-10 Mon 12:52]
* DONE check mongo for already processed pdf papers
  CLOSED: [2016-10-05 Wed 11:19]
* DONE add with_error_handling method, from Avdi, rubytapas
  CLOSED: [2016-10-05 Wed 11:20]
* DONE add pdf_file struct, so it's easier to handle
  CLOSED: [2016-10-23 Sun 09:41]
queue = Queue.new
#+BEGIN_SRC ruby
Pdf = Struct.new(:filename, :path) do 
  def to_s
    "#{:path + :filename}"
  end
end
#+END_SRC


* DONE split wisdom into bin & lib files
  CLOSED: [2016-10-23 Sun 09:41]
* TODO move to threads


* benchmark
** wave server 1 core 
| #files | #threads |     time (s) | speed (s/file) |
|--------+----------+--------------+----------------|
|    117 |        4 |      556.859 |      4.7594786 |
|    114 |       10 |      499.278 |      4.3796316 |
|    109 |       20 |      524.119 |      4.8084312 |
|    119 |        1 |      539.582 |      4.5343025 |
|    110 |       15 | 8*60 + 26.13 |      4.6011818 |
|        |          |              |                |
#+TBLFM: $4=$3/$1::@2$3=9*60 + 16.859::@3$3=8*60 + 19.278::@4$3=8*60 + 44.119::@5$3=8*60+59.582
